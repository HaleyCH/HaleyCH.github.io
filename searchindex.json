[{"section":"Blog","slug":"/blog/build-your-blog-1/","title":"使用hugo+GitHub Pages搭建免费博客","description":"本文介绍了如何使用hugo、如何配置hugo，并讲解了如何使用GitHub Pages搭建免费博客。","date":"August 28, 2023","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \u003cimg\n    loading=\"\"\n    decoding=\"async\"\n    src=\"https://cdn.hluvmiku.tech/blog/202308281329993.png\"\n    alt=\"\"\n    class=\" img\"\n    height=\"\"\n    width=\"420\" /\u003e\n","imageSM":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \u003cimg\n    loading=\"\"\n    decoding=\"async\"\n    src=\"https://cdn.hluvmiku.tech/blog/202308281329993.png\"\n    alt=\"\"\n    class=\" img\"\n    height=\"100\"\n    width=\"100\" /\u003e\n","searchKeyword":"","categories":"技术分享, 博客搭建","tags":"hugo, GitHub Pages, 博客搭建, Go","content":" 目录 1 前言 2 安装hugo 3 配置hugo与挑选主题 4 使用GitHub Pages部署免费博客 4.1 创建GitHub Pages 4.2 部署博客 4.3 （可选）绑定域名 5 结语 1 前言 Note\n注意：我并不推荐这套方案，比起这套方案，hexo + GitHub Pages有着更加完善的生态。\n如果说是使用托管服务搭建博客的话，其实我并不是很建议 hugo 。\nhugo 相较于 hexo 来说，配置起来比较麻烦，而且 hugo 的主题插件也比较少。\n它的优势在哪呢？它的唯一优势是生成速度快。但是既然都使用托管服务了，那么生成速度就不在我们的考量中。\n那么为什么我还是使用 hugo 呢？\n单纯是因为我一开始是想部署到自己服务器上的，后来才发现部署到 GitHub Pages 上更方便。\n2 安装hugo 首先安装 Go。\nMacOS Linux Windows brew install go sudo apt install golang-go 下载地址 安装完成后，执行 go version 查看是否安装成功。\n接下来去GitHub的release页面下载 hugo 的二进制文件。\n下载地址 或者，如果你使用的是 MacOS ，可以直接使用 brew 安装。\nbrew install hugo 根据 README.md 安装即可。\n3 配置hugo与挑选主题 Note\n每个主题的配置文件都略微有区别，本文只挑选共性的部分进行讲解。\n我使用的是 hugoplate 主题，其他主题也大同小异。\n你可以在这里 挑选你喜欢的主题。\n并按照它的文档进行安装。\n安装完主题后，我们需要配置 config.toml 文件。\n（在 hugoplate 主题中，配置文件是 hugo.toml ，其他主题可能是 config.toml ）\n首先我们按照需求填写基本信息。 baseURL 部分可以等创建完GitHub Pages后再进行填写。\nbaseURL = \u0026#34;https://hluvmiku.tech\u0026#34; # Title of your website (required). title = \u0026#34;HaleyCH\u0026#39;s Blog\u0026#34; # Your theme name theme = \u0026#34;hugoplate\u0026#34; # Default time zone for time stamps; use any valid tz database name: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List timeZone = \u0026#34;Asia/Shanghai\u0026#34; 其中theme修改为你使用的主题名称。\n下方内容按需配置：\n配置语言与多国语 Tip\n不建议使用多国语言，虽然hugo原生支持多国语言，但是多国语生成的sitemap会不被某些搜索引擎接受。\n在 hugoplate 主题中，语言与目录配置文件在 config/_default 目录下。\n若要支持多国语，只需修改 languages.toml 文件即可。\n################ English language ################## [en] languageName = \u0026#34;english\u0026#34; languageCode = \u0026#34;en\u0026#34; contentDir = \u0026#34;content/en\u0026#34; weight = 1 ################ Chinese language ################## # [zh] # languageName = \u0026#34;中文\u0026#34; # languageCode = \u0026#34;zh\u0026#34; # contentDir = \u0026#34;content/en\u0026#34; # weight = 1 其中languageCode为语言代码，contentDir为语言对应的内容目录。\n他们分别同目录下的menus.en.toml和 content 目录下的 en 目录对应。\n若要修改目录对应的翻译，则需修改对应语言的 menus.toml 文件。\n如果有i18n目录，则需修改 i18n 目录下对应语言的 toml 文件。\n定制你的博客 Note\n这一块不同主题差距比较大，我只我对 hugoplate 主题的配置为例。\n我先对config/_default目录下params.torml文件进行配置。\nfavicon = \u0026#34;images/favicon.png\u0026#34; # 网站图标 logo = \u0026#34;\u0026#34; # logo 由于我没有，故为空。 logo_darkmode = \u0026#34;\u0026#34; # theme-mode theme_switcher = true theme_default = \u0026#34;system\u0026#34; # available options [light/dark/system] copyright = \u0026#34;Made with ❤️ by Haley.\u0026lt;br\u0026gt;Since 2023\u0026#34; # copyright 以上是基础的网站信息配置，下面是一些SEO配置。\n# seo meta data for OpenGraph / Twitter Card [metadata] keywords = [\u0026#34;technology\u0026#34;, \u0026#34;blog\u0026#34;] description = \u0026#34;Hugo \u0026amp; Tailwindcss Starter\u0026#34; author = \u0026#34;HaleyCH\u0026#34; image = \u0026#34;images/og-image.png\u0026#34; 接下来，根据主题中使用的插件不同，可能在data目录下也会有部分配置，这部分我不做讲解。\n此外，如果你想要修改主题的样式，可以在 assets 目录下进行修改。\n定制化你的文章 在 hugo 中，文章通过 hugo new 命令创建。\nhugo new posts/your-post-name.md 这样就创建了一篇文章，文章的内容在 content/posts/your-post-name.md 中。\n它会查看 archetypes 目录下的 default.md 文件，将其内容执行并复制到新建的文章中。\n下面是一个例子：\n--- title: \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; date: {{ .Date }} draft: true --- 我将会另外写一篇文章讲解利用 hugo 的 archetypes 实现类似 hexo 的 abbrlink 功能。\n4 使用GitHub Pages部署免费博客 4.1 创建GitHub Pages 首先，我们需要创建一个仓库，仓库名必须为 username.github.io ，其中 username 为你的用户名。\n这样，GitHub Pages就会自动为你创建一个网站。\nNote\n现在GitHub Pages已经可以在所有仓库中创建了，但是我还是建议使用 username.github.io 的方式。\n因为这样可以不用自己申请域名。\n你可以在这里查看GitHub Pages配置情况 4.2 部署博客 首先，我们需要在本地生成静态文件。 hugo 这样就会在 public 目录下生成静态文件。 2. 接下来，我们需要设置远程仓库。\ncd public git init git remote add origin git pull origin master 最后，我们将静态文件推送到远程仓库。 git add . git commit -m \u0026#34;init\u0026#34; git push origin master 在 GitHub Pages 的设置中，将 Source 设置为 master branch 。 等待一段时间后，你的博客就会部署成功了。访问地址为 https://username.github.io 。 4.3 （可选）绑定域名 如果你想要绑定域名，可以在 GitHub Pages 的设置中，将 Custom domain 设置为你的域名。\n然后，在你的域名服务商中，添加一条 CNAME 记录，将 username.github.io 指向你的域名。 即可完成绑定。\n5 结语 至此，你的博客就已经部署成功了。\n不过它存在以下几点问题：\n操作繁琐，每次写完文章都需要手动执行一系列命令。 备份同步麻烦。 这些问题将会在我的下一篇博客中解决。\n在下一篇博客中，我将详细讲解利用GitHub Action自动部署的方案，这样你就只需在本地push整个目录，就可以自动部署了。\n"},{"section":"Blog","slug":"/blog/helloworld/","title":"Re:你好，世界","description":"hello world","date":"August 26, 2023","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \u003cimg\n    loading=\"\"\n    decoding=\"async\"\n    src=\"https://cdn.hluvmiku.tech/blog/202308272034636.png\"\n    alt=\"\"\n    class=\" img\"\n    height=\"\"\n    width=\"420\" /\u003e\n","imageSM":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \u003cimg\n    loading=\"\"\n    decoding=\"async\"\n    src=\"https://cdn.hluvmiku.tech/blog/202308272034636.png\"\n    alt=\"\"\n    class=\" img\"\n    height=\"100\"\n    width=\"100\" /\u003e\n","searchKeyword":"","categories":"网站搭建, 技术分享, 生活","tags":"hello world","content":" 目录 原来的博客发生了什么？ 这是什么？ 封面是什么？ 总之，因祸得福 原来的博客发生了什么？ 长话短说，我不小心把之前博客的数据库删了。\n不是因为生气，不是因为累，就单纯是手抖删除了了数据库文件。\n这是什么？ 这是我用 Hugo 搭建的博客，并使用 Github Actions 自动部署。\n所有图片通过 七牛云 储存，本地上传采用了 PicGO。\n全博客本着能用现成的就不造轮子的宗旨。\n感觉比上一个博客舒服多了，具体流程我会在之后的文章中分享。\n封面是什么？ 封面是我无意中翻出去年自己设计的第一款鼠标垫的私货款式，因为不符合某些要求，最后没做出来。\n总之，因祸得福 这是我的第六版博客。\n自己手写了3版，第一版是Django乱做的，第二版是纯三件套搭的，第三版是用Vue3搭的。\n第四版，也就是之前的博客，是用Hexo搭的，部署在自己服务器上，但是被我手抖删除了。\n在这之后的半年里，我试着用wordpress搭建过博客，不尽如人意，然后我又用Vue3写了一个。\n但是我太懒了，感觉也没提升，就搁置了。\n现在的这一版，我放弃了自己手动搭博客，也懒得再在本地搭了。\n托管在GitHub上，用现成的框架，用OSS储存图片，如果不是因为我第四版博客崩了，我也绝对不会接受这套方案。\n现在感觉这套方案很好🥰。\n"}]